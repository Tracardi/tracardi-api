{"file_name": "docs/ai/templates/code_docs.md", "questions": ["General question: ", "- What is the purpose of the code?", "Specific questions: ", "- How does the code compute the User Agent data?", "- How does the code get the spoken languages from the request and geo?", "- What is the purpose of the \"Screen\" section of the code?"], "answer": "# Is new session        if session.operation.new:\n\n            # Add session created event to the registered events\n            tracker_payload.events.append(\n                EventPayload(type='session-opened', properties={})\n            )\n\n            # Compute the User Agent data\n            try:\n                ua_string = session.context['browser']['local']['browser']['userAgent']\n                user_agent = parse(ua_string)\n\n                session.os.version = user_agent.os.version_string\n                session.os.name = user_agent.os.family\n\n                device_type = 'mobile' if user_agent.is_mobile else \\\n                    'pc' if user_agent.is_pc else \\\n                        'tablet' if user_agent.is_tablet else \\\n                            'email' if user_agent.is_email_client else None\n\n                if 'device' in session.context:\n                    session.device.name = session.context['device'].get('name', user_agent.device.family)\n                    session.device.brand = session.context['device'].get('brand', user_agent.device.brand)\n                    session.device.model = session.context['device'].get('model', user_agent.device.model)\n                    session.device.touch = session.context['device'].get('model', user_agent.device.is_touch_capable)\n                    session.device.type = session.context['device'].get('type', device_type)\n                else:\n                    session.device.name = user_agent.device.family\n                    session.device.brand = user_agent.device.brand\n                    session.device.model = user_agent.device.model\n                    session.device.touch = user_agent.is_touch_capable\n                    session.device.type = device_type\n\n                # Get Language from request and geo\n\n                spoken_languages = []\n                language_codes = []\n                if 'headers' in tracker_payload.request and 'accept-language' in tracker_payload.request['headers']:\n                    languages = parse_accept_language(tracker_payload.request['headers']['accept-language'])\n                    if languages:\n                        spoken_lang_codes = [language for (language, _) in languages if len(language) == 2]\n                        for lang_code in spoken_lang_codes:\n                            if lang_code in language_codes_dict:\n                                spoken_languages += language_codes_dict[lang_code]\n                                language_codes.append(lang_code)\n\n                if session.device.geo.country.code:\n                    lang_code = session.device.geo.country.code.lower()\n                    if lang_code in language_codes_dict:\n                        spoken_languages += language_codes_dict[lang_code]\n                        language_codes.append(lang_code)\n\n                if spoken_languages:\n                    session.context['language'] = list(set(spoken_languages))\n                    profile.data.pii.language.spoken = session.context['language']\n\n                if 'geo' not in profile.aux:\n                    profile.aux['geo'] = {}\n\n                # Continent\n\n                if 'time' in tracker_payload.context:\n                    tz = tracker_payload.context['time'].get('tz', 'utc')\n\n                    if tz.lower() != 'utc':\n                        continent = tz.split('/')[0]\n                    else:\n                        continent = 'n/a'\n\n                    profile.aux['geo']['continent'] = continent\n\n                # Aux markets\n\n                markets = []\n                for lang_code in language_codes:\n                    if lang_code in language_countries_dict:\n                        markets += language_countries_dict[lang_code]\n\n                if markets:\n                    profile.aux['geo']['markets'] = markets\n\n                # Screen\n\n                try:\n                    session.device.resolution = f\"{tracker_payload.context['screen']['local']['width']}x{tracker_p", "hash": "53233665670f520b4f84620681d024cf2d37a535"}