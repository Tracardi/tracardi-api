{"file_name": "docs/ai/templates/plugin_docs.md", "questions": ["General Question: ", "- How do Tracardi plugins work in workflows, and what is their role in passing data between plugins?", "Specific Questions:", "- How is data referenced in Tracardi workflows using dot notation, and what are the components of a dot notation reference?", "- What is the purpose of the DotAccessor class, and how does it facilitate accessing dot notated data?", "- How do UX plugins in Tracardi workflows inject javascript into the integration script's page?"], "answer": "# General context\nTracardi plugins are used in workflows. They are sometimes called actions or action plugins. Workflow passes data form \nplugin to plugin via its input and output ports. Plugin may have one input port and many output ports. \n\nWorkflow has internal state. It can be referenced byt the dot notation. In\nshort, dot notation is a way of referencing data in Tracardi. It is used to access data from the internal state of the\nworkflow, such as the event, profile, payload, flow, session, and memory. It is written in the form of <source>@<\npath.to.data>, where the source is the type of data you are referencing and the path is a string of keys that indicate\nwhere the data is located. Class DotAccessor is used to access dot notated data. Usually the DotAccessor dict is\nreturned by `self._get_dot_accessor(payload)`. DotAccessor extends dict and acts as dict.\n\nWorkflow can also execute UX plugins that in return will inject some javascript to the page where the Tracardi \nintegration script is placed.", "hash": "7b053c518dc248994946e3025b8c6383293343f7"}