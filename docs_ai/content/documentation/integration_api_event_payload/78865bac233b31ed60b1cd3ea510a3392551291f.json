{"file_name": "docs/integration/api/event_payload.md", "questions": ["Question 1: What is the structure of the Event Payload and what attributes does it contain?", "Optional Questions:", "- How can you define the event type in the Event Payload?", "- How can you customize the timestamp for an event in the Event Payload?", "- What are event properties and what kind of information can they contain?"], "answer": "# Event Payload\nThe Event Payload is a component of the event tracker payload, which is used to track and record events. The complete\ntracker payload follows this JSON structure:\n\n```json\n{\n  \"source\": {\n    \"id\": \"Source ID\"\n  },\n  \"session\": {\n    \"id\": \"Session ID\"\n  },\n  \"profile\": {\n    \"id\": \"Profile ID\"\n  },\n  \"context\": {\n    // Context data\n  },\n  \"properties\": {},\n  \"events\": [\n    {\n      \"type\": \"event-type\",\n      \"properties\": {\n        // Event properties\n      },\n      \"options\": {\n        // Event options\n      },\n      \"context\": {\n        // Additional context data\n      }\n    },\n    ...\n  ],\n  \"options\": {}\n}\n```\n\nThe specific part related to events is as follows:\n\n```json\n{\n  \"type\": \"event-type\",\n  \"properties\": {\n    // Event properties\n  },\n  \"options\": {\n    // Event options\n  },\n  \"context\": {\n    // Additional context data\n  }\n}\n```\n\nThe Event Payload consists of the following attributes:\n\n| Attribute   | Type                   | Description                                     |\n|-------------|------------------------|-------------------------------------------------|\n| type        | str                    | Type or category of the event                   |\n| time        | Optional[Time]         | Timestamp information for the event (optional)  |\n| properties  | Optional[dict]         | Properties associated with the event (may be empty) |\n| options     | Optional[dict]         | Additional options for the event (may be empty)     |\n| context     | Optional[dict]         | Additional context data for the event (may be empty)|\n| tags        | Optional[list]         | Tags associated with the event (optional)       |\n\nThe `Time` attribute, used within the `time` field, has the following structure:\n\nThe `Time` class provides timestamp information for the event, with the following attributes:\n\n- `insert`: Optional[datetime] - The timestamp of the event insertion.\n- `create`: Optional[datetime] - The timestamp of the event creation.\n- `update`: Optional[datetime] - The timestamp of the event update.\n\nIf the `insert` attribute is not provided explicitly, it defaults to the current UTC datetime at the time of\ninstantiation.\n\n## Usage\n\n### Event type\n\nDefine event type as slug of its name. For example if the event type is `Page View` set `type` to `page-view`.\n\n### Time\n\nTo send an event, you can populate the attributes described above according to your specific event data. If you wish to\noverride the current insert time, which represents the time of event collection, and instead use a custom time, you can\nset the `time.insert` attribute to the desired date and time.\n\nThe same principle applies to the `create` and `update` attributes. If you want to provide custom timestamps for event\ncreation or update, you can set the corresponding values of `time.create` and `time.update` to the appropriate dates and\ntimes.\n\nBy customizing the `time` attributes, you can have more control over the temporal aspects associated with the event,\nensuring accurate representation within your event tracking system.\n\n### Properties\n\nEvent properties refer to specific attributes or characteristics that provide relevant details about an event. They\ncontain the actual data associated with the event and can vary depending on the nature of the event and the specific\nrequirements of the system or application. Here are some examples of what can be included as event properties:\n\n1. User information: Information about the user involved in the event, such as user ID, username, email address, or any\n   other relevant user identifiers.\n2. Event parameters: Parameters or values that capture specific aspects of the event, such as quantity, price, duration,\n   location, or any other measurable or meaningful attributes.\n3. Status indicators: Flags or indicators that reflect the status or outcome of the event, such as success, failure,\n   pending, or in-progress.\n4. Metadata: Additional contextual information or metadata that provides further insig", "hash": "78865bac233b31ed60b1cd3ea510a3392551291f"}